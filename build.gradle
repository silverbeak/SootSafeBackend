/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Scala library project to get you started.
 * For more details take a look at the Scala plugin chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.2.1/userguide/scala_plugin.html
 */
import com.github.maiflai.ScalaTestAction

plugins {
  id "com.github.maiflai.scalatest" version "0.16"
}

// Apply the scala plugin to add support for Scala
apply plugin: 'scala'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // Use Scala 2.11 in our library project
    compile 'org.scala-lang:scala-library:2.11.8'

    compile 'com.google.cloud:google-cloud-firestore:0.25.0-beta'

    compile 'org.json4s:json4s-native_2.11:3.5.3'

    // https://mvnrepository.com/artifact/org.scalatest/scalatest_2.11
    testCompile 'org.scalatest:scalatest_2.11:3.0.4'

    // Use Scalatest for testing our library
    testCompile 'junit:junit:4.12'

    // Need scala-xml at test runtime
    testRuntime 'org.scala-lang.modules:scala-xml_2.11:1.0.6'

    testRuntime 'org.pegdown:pegdown:1.4.2'

}

// task scalaTest(dependsOn: ['testClasses'], type: JavaExec) {
//   main = 'org.scalatest.tools.Runner'
//   args = ['-R', 'build/classes/scala/test', '-o']
//   classpath = sourceSets.test.runtimeClasspath
// }

// test.dependsOn scalaTest // so that running "test" would run this first, then the JUnit tests

task scalaTest(type: Test) {
    actions = [ new ScalaTestAction() ]
    reports {
        html {
            destination = file("$project.buildDir/reports/scalatest")
        }
    }
}